*{box-sizing:border-box}body,html{background:#fbeeda;margin:0}.svg,body,html{width:100%;height:100%}.svg{overflow:hidden}svg{transform:translate(-46%,-43%) scale(6);position:relative;left:50%;top:50%;transition:all 1s;width:100%}svg.lines-introTo_2-2-animation{animation-name:a;animation-duration:1s;animation-fill-mode:forwards;animation-iteration-count:1;animation-timing-function:linear}svg.lines-introTo_2-animation{animation-name:c;animation-duration:1s;animation-fill-mode:forwards;animation-iteration-count:1;animation-timing-function:linear}svg.lines-_2-2To_6-2-animation{animation-name:b;animation-duration:1s;animation-fill-mode:forwards;animation-iteration-count:1;animation-timing-function:linear}svg.lines-_2-2To_3-2-animation{animation-name:d;animation-duration:1s;animation-fill-mode:forwards;animation-iteration-count:1;animation-timing-function:linear}svg.lines-_3-2To_4-2-animation{animation-name:e;animation-duration:1s;animation-fill-mode:forwards;animation-iteration-count:1;animation-timing-function:linear}svg.lines-_2-2To_2-animation{animation-name:f;animation-duration:1s;animation-fill-mode:forwards;animation-iteration-count:1;animation-timing-function:linear}svg.active_6-2{transform:translate(-126%,-55%) scale(6)}svg.active_3-2{transform:translate(-99%,-208%) scale(6)}svg.active_5-2{transform:translate(-148%,-145%) scale(6)}svg.active_4-2{transform:translate(-189%,-217%) scale(6)}svg.active_7{transform:translate(-201%,-14%) scale(6)}svg.active_8{transform:translate(-126%,117%) scale(6)}svg.active_10{transform:translate(-185%,173%) scale(6)}svg.active_9{transform:translate(-40%,123%) scale(6)}svg.active_3{transform:translate(21%,-37%) scale(6)}svg.active_5{transform:translate(50%,167%) scale(6)}svg.active_4{transform:translate(63%,-120%) scale(6)}svg.active_6{transform:translate(126%,3%) scale(6)}text{display:none}@keyframes a{0%{transform:translate(-46%,-43%) scale(6)}33%{transform:translate(-43%,-76%) scale(6)}66%{transform:translate(-47%,-110%) scale(6)}to{transform:translate(-52%,-146%) scale(6)}}@keyframes b{0%{transform:translate(-52%,-146%) scale(6)}to{transform:translate(-119%,-102%) scale(6)}}@keyframes c{0%{transform:translate(-46%,-43%) scale(6)}to{transform:translate(33%,12%) scale(6)}}@keyframes d{0%{transform:translate(-52%,-146%) scale(6)}to{transform:translate(-96%,-257%) scale(6)}}@keyframes e{0%{transform:translate(-96%,-257%) scale(6)}to{transform:translate(-186%,-269%) scale(6)}}@keyframes f{0%{transform:translate(-52%,-146%) scale(6)}to{transform:translate(-52%,-146%) scale(6)}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
