$(".cls-32 .button_5-3-right").on("click",function(){$("svg").addClass("active_2-2"),console.log("fired")}),$(".cls-32 .button_5-3-left").on("click",function(){$("svg").addClass("active_2")}),$(".cls-14 .button_2-left").on("click",function(){$("svg").addClass("active_5")}),$(".cls-14 .button_2-right").on("click",function(){$("svg").addClass("active_3")}),$(".cls-32 .button_5-left").on("click",function(){$("svg").addClass("active_4")}),$(".cls-32 .button_5-right").on("click",function(){$("svg").addClass("active_6")}),$(".cls-4 button_4-right").on("click",function(){$("svg").addClass("active_6")}),$(".cls-4 button_4-left").on("click",function(){$("svg").addClass("active_well_done")}),$(".cls-14 .button_2-right").on("click",function(){$("svg").addClass("active_5")}),$(".cls-14 .button_2-left").on("click",function(){$("svg").addClass("active_4")}),$(".cls-4 .button_2-2-top").on("click",function(){$("svg").addClass("active_2")}),$(".cls-4 .button_2-2-right").on("click",function(){$("svg").addClass("active_6-2")}),$(".cls-4 .button_2-2-bottom").on("click",function(){$("svg").addClass("active_3-2")}),$(".cls-28 .button_3-2-left").on("click",function(){$("svg").addClass("end")}),$(".cls-28 .button_3-2-right").on("click",function(){$("svg").addClass("active_6-2")}),$(".cls-28 .button_3-2-bottom").on("click",function(){$("svg").addClass("active_4-2")}),$(".cls-40 .button_9-top").on("click",function(){$("svg").addClass("active_10")}),$(".cls-40 .button_9-button").on("click",function(){$("svg").addClass("active_5-3")}),$(".cls-4 .button_4-2-left").on("click",function(){$("svg").addClass("active_3-2")}),$(".cls-4 .button_4-2-right").on("click",function(){$("svg").addClass("end")}),$(".cls-32 .button_5-2-right").on("click",function(){$("svg").addClass("active_10")}),$(".cls-32 .button_5-2-left").on("click",function(){$("svg").addClass("end")}),$(".cls-14 .button_6-2-right").on("click",function(){$("svg").addClass("active_7")}),$(".cls-14 .button_6-2-left").on("click",function(){$("svg").addClass("active_3-2")}),$(".cls-40 .button_8-top").on("click",function(){$("svg").addClass("active_7")}),$(".cls-40 .button_8-bottom").on("click",function(){$("svg").addClass("active__9")}),$(".cls-4 .button_10-right").on("click",function(){$("svg").addClass("active_triple_a")}),$(".cls-4 .button_10-left").on("click",function(){$("svg").addClass("acive_hello")}),$(".cls-40 .button_7-right").on("click",function(){$("svg").addClass("active_8")}),$(".cls-40 .button_7-left").on("click",function(){$("svg").addClass("active_4-2")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
